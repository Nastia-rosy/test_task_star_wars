{"version":3,"sources":["Components/Header/Nav/Nav.tsx","Components/Header/Header.tsx","Components/Footer/Footer.tsx","Components/HomePage/HomePage.tsx","Components/FilmsPage/Movie/Movie.tsx","Components/FilmsPage/FilmsPage.tsx","Components/FilmsPage/MovieDetails/MovieDetails.tsx","Components/Main/Main.tsx","App.tsx","index.tsx"],"names":["Nav","className","to","exact","activeClassName","Header","src","alt","Footer","HomePage","moviesImages","Movie","movie","movieImg","find","item","title","urlParam","toLowerCase","split","join","key","opening_crawl","FilmsPage","movies","useState","query","setQuery","filterQuery","setfilterQuery","films","setFilms","vissibleMovies","useMemo","allMovies","searchQuery","pattern","RegExp","filter","test","getVisibleMovies","setfilterQueryWithDebonce","useCallback","debounce","type","value","placeholder","onChange","event","target","onClick","sortedMovies","sort","a","b","localeCompare","map","MovieDetails","starships","planets","planetsInMovie","setPlanetsInMovie","starshipsInMovie","setStarshipsInMovie","keepPlanets","keepStarships","forEach","planet","p","url","push","starship","s","episode_id","director","producer","release_date","name","Main","setPlanets","setStarships","useEffect","fetch","res","json","data","results","fetchStarships","fetchPlanets","path","component","App","setMovies","fetchMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36202f3e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Nav.scss';\n\nconst Nav:React.FC = () => {\n  return (\n    <nav className=\"header__nav nav\">\n    <ul className=\"nav__list\">\n      <li className=\"nav__item\">\n        <NavLink\n          to=\"/\"\n          exact\n          className=\"nav__link\"\n          activeClassName=\"nav__link--active\"\n        >\n          Home\n        </NavLink>\n      </li>\n      <li className=\"nav__item\">\n        <NavLink\n          to=\"/films\"\n          exact\n          className=\"nav__link\"\n          activeClassName=\"nav__link--active\"\n        >\n          Films\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n  )\n}\n\nexport default Nav;","import React from 'react';\nimport './Header.scss';\nimport Nav from './Nav/Nav';\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <img\n        src=\"https://static-mh.content.disney.io/starwars/assets/navigation/sw_logo_stacked-336c62367939.png\"\n        alt=\"Star Wars Logo\"\n        className=\"header__logo\"\n      />\n      <Nav />\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.scss';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">\n        TM & © Lucasfilm Ltd. All Rights Reserved\n    </p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport './HomePage.scss';\n\nconst HomePage: React.FC = () => {\n\n  return (\n    <div className=\"home-page\">\n      <img \n        src=\"https://mfst.igromania.ru/wp-content/uploads/2020/07/Star-Wars-Sequel-Trilogy.jpg\" \n        alt=\"Star Wars\"\n        className=\"home-page__img\"\n      />\n      <h2 className=\"home-page__title\">\n        Star Wars\n      </h2>\n      <p className=\"home-page__text\">\n        Star Wars is a science-fiction franchise comprising movies, books, comics,\n        video games, toys, and animated shows. It is a fictional universe created\n        by George Lucas. The Star Wars story employs archetypal motifs common to\n        science fiction, political climax and classical mythology, as well as musical\n        motifs of those aspects.\n\n        As one of the foremost examples of the space opera subgenre of science fiction,\n        Star Wars has become part of mainstream popular culture, as well as being one\n        of the highest-grossing series of all time. It is currently the second\n        highest-grossing film series behind only the Marvel Cinematic Universe\n        and also the second highest-grossing media franchise of all time (with only\n        the Japanese franchise Pokémon outranking it).\n      </p>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Movie.scss';\n\ntype Props = {\n  movie: Movie;\n}\n\nconst moviesImages = [\n  'A New Hope',\n  'Attack of the Clones',\n  'Return of the Jedi',\n  'Revenge of the Sith',\n  'The Empire Strikes Back',\n  'The Phantom Menace'\n];\n\nconst Movie: React.FC<Props> = ({ movie }) => {\n  const movieImg = moviesImages.find(item => item === movie.title);\n  const urlParam = `star wars ${movie.title}`.toLowerCase().split(' ').join('-');\n  \n  return (\n    <>\n        <li className=\"movie__item\" key={movie.title}>\n          <div className=\"movie__text-wrapper\">\n            <NavLink \n              to={`/films/${urlParam}`}\n              className=\"movie__title-link\"\n            >\n              <h2 \n                className=\"movie__title\"\n              >\n                star wars: {movie.title}\n              </h2>\n            </NavLink>\n            <p className=\"movie__text\">\n              {movie.opening_crawl}\n            </p>\n            <h4 className=\"movie__category\">\n              films\n            </h4>        \n          </div>\n          <NavLink \n              to={`/films/${urlParam}`}\n              className=\"movie__image-link\"\n          >\n            <div className=\"movie__img-wrapper\">\n              <img \n                src={`./images/${movieImg}.jpg`} \n                alt={movieImg} \n                className=\"movie__image\"\n              />        \n            </div>\n          </NavLink>\n      </li>   \n    </>\n  );\n}\n\nexport default Movie;","import React, { useCallback, useState, useMemo } from 'react';\nimport debounce from 'lodash/debounce';\nimport Movie from './Movie/Movie';\nimport './FilmsPage.scss';\n\ntype Props = {\n  movies: Movie[];\n}\n\nconst FilmsPage: React.FC<Props> = ({ movies }) => {\n  const [query, setQuery] = useState('');\n  const [filterQuery, setfilterQuery] = useState('');\n  const [films, setFilms] = useState(movies);\n\n  const getVisibleMovies = (allMovies: Movie[], searchQuery: string) => {\n    const pattern = new RegExp(searchQuery, 'i');\n\n    return allMovies.filter(({ opening_crawl, title }) => pattern.test(opening_crawl + title));\n  }\n\n  let vissibleMovies = useMemo(\n    () => getVisibleMovies(movies, filterQuery),\n\n    [filterQuery, movies]\n  );\n\n  useMemo(\n    () => setFilms(vissibleMovies),\n   [vissibleMovies])\n\n  const setfilterQueryWithDebonce = useCallback(\n    debounce(setfilterQuery, 1000),\n    []\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setfilterQueryWithDebonce(event.target.value)\n  }\n\n  const handleSortButton = () =>  {\n    const sortedMovies = [...films].sort((a, b) => a.title.localeCompare(b.title));\n    setFilms(sortedMovies)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"search\">\n        <input\n          type=\"text\"\n          value={query}\n          className=\"search__input\"\n          placeholder=\"Search Movie\"\n          onChange={handleChange}\n        />\n        <div className=\"search__icon\"></div>\n      </div>\n      <button\n        className=\"movies__sort-button\"\n        onClick={handleSortButton}\n      >\n        Sort by name\n      </button>\n      <ul className=\"movies__list\">\n        {films.map(movie => (\n          <Movie movie={movie} />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default FilmsPage;","import React, { useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport './MovieDetails.scss';\n\ntype Props = {\n  movie: Movie;\n  planets: Planet[];\n  starships: Starship[];\n}\n\nconst MovieDetails: React.FC<Props> = ({ movie, starships, planets }) => {\n  const [planetsInMovie, setPlanetsInMovie] = useState<Planet[]>([]);\n  const [starshipsInMovie, setStarshipsInMovie] = useState<Starship[]>([]);\n  const keepPlanets: Array<Planet> = [];\n  const keepStarships: Array<Starship> = [];\n\n  useMemo(() => {\n    movie.planets.forEach(item => {\n      const planet = planets.find(p => p.url === item);\n      \n      if (planet) {\n        keepPlanets.push(planet);\n      }\n    })\n    setPlanetsInMovie(keepPlanets);\n  }, [keepPlanets, movie.planets, planets])\n\n  useMemo(() => {\n    movie.starships.forEach(item => {\n      const starship = starships.find(s => s.url === item);\n      \n      if (starship) {\n        keepStarships.push(starship);\n      }\n    })\n    setStarshipsInMovie(keepStarships);\n  }, [keepStarships, movie.starships, starships]);\n  \n  return (\n    <>\n      <Link to=\"/films\" className=\"movie-details__back-button\">\n        &#8249; Back\n      </Link>\n      <div className=\"movie-details\">\n        <h2 className=\"movie-details__title\">\n          <span className=\"movie-details__header\">Title:\t&nbsp;</span>\n          {movie.title}\n        </h2>\n        <p className=\"movie-details__text\">\n          <span className=\"movie-details__header\">Description:\t&nbsp;</span>\n          {movie.opening_crawl}\n        </p>\n        <p className=\"movie-details__episode\">\n          <span className=\"movie-details__header\">Episode:\t&nbsp;</span>\n          {movie.episode_id}\n        </p>\n        <p className=\"movie-details__director\">\n          <span className=\"movie-details__header\">Director:\t&nbsp;</span>\n          {movie.director}\n        </p>\n        <p className=\"movie-details__producer\">\n          <span className=\"movie-details__header\">Producer:\t&nbsp;</span>\n          {movie.producer}\n        </p>\n        <p className=\"movie-details__release\">\n          <span className=\"movie-details__header\">Release date:\t&nbsp;</span>\n          {movie.release_date}\n        </p>\n        <p className=\"movie-details__planets\">\n          <span className=\"movie-details__header\">Planets:\t&nbsp;</span>\n          {planetsInMovie.map(planet => (\n            <span className=\"movie-details__planet\" key={planet.url}>\n              {planet.name}, &nbsp;\n            </span>\n          ))}\n        </p>\n        <p className=\"movie-details__starships\">\n          <span className=\"movie-details__header\">Starships:\t&nbsp;</span>\n          {starshipsInMovie.map(starship => (\n            <span className=\"movie-details__starship\" key={starship.url}>\n              {starship.name}, &nbsp;\n            </span>\n          ))}\n        </p>\n      </div>\n    </>\n  );\n}\n\nexport default MovieDetails;","import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from '../HomePage/HomePage';\nimport FilmsPage from '../FilmsPage/FilmsPage';\nimport MovieDetails from '../FilmsPage/MovieDetails/MovieDetails';\n\ntype Props = {\n  movies: Movie[];\n}\n\nconst Main: React.FC<Props> = ({ movies }) => {\n  const [planets, setPlanets] = useState<Planet[]>([]);\n  const [starships, setStarships] = useState<Starship[]>([]);\n\n  useEffect(() => {\n    async function fetchPlanets() {\n      let res = await fetch('https://swapi.dev/api/planets/?format=json');\n      let data = await res.json();\n      setPlanets(data.results)\n    }\n\n    async function fetchStarships() {\n      let res = await fetch('https://swapi.dev/api/starships/?format=json');\n      let data = await res.json();\n      setStarships(data.results);\n    }\n\n\n    fetchStarships();\n    fetchPlanets();\n  }, []);\n\n  return (\n    <main>\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact component={() => <HomePage />} />\n          <Route path=\"/films\" exact component={() => <FilmsPage movies={movies} />} />\n          {movies.map(movie => {\n            const urlParam = `star wars ${movie.title}`.toLowerCase().split(' ').join('-');\n\n            return (\n              <Route\n                path={`/films/${urlParam}`}\n                component={() => \n                  <MovieDetails movie={movie} planets={planets} starships={starships}\n                />}\n                key={urlParam}\n              />\n            )\n          })}\n        </Switch>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/Footer';\nimport Main from './Components/Main/Main';\n\nconst App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      let res = await fetch('https://swapi.dev/api/films/?format=json');\n      let data = await res.json();\n      setMovies(data.results);\n    }\n\n    fetchMovies();\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <Main movies={movies} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}